name: CI-post-merge
on:
  push:
    branches:
    - main
    - release-*

permissions:
  # This is necessary for AWS credentials. See:
  # https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect#adding-permissions-settings
  id-token: write
  contents: write

jobs:

  re-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23
    - name: Re-test
      run: make test

  update-tag:
    if: "startsWith(github.event.head_commit.message, 'Release v')"
    runs-on: ubuntu-latest
    needs: re-test
    outputs:
      new_version: ${{ steps.tag_version.outputs.new_version }}
    steps:
    - uses: actions/checkout@v4
    - name: Extract version
      run: |
        ver=$(echo "$COMMIT_MESSAGE"| head -n1 | awk '{print $2}' |sed 's/v//')
        echo "version=${ver}" >> $GITHUB_ENV
      env:
        COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        custom_tag: ${{ env.version }}

  publish-binary:
    runs-on: ubuntu-latest
    needs: update-tag
    steps:
    - uses: actions/checkout@v4
      with:
        ref: v${{ needs.update-tag.outputs.new_version }}
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23
    - name: Generate GitHub App Token
      uses: actions/create-github-app-token@v1
      id: app-token
      with:
        app-id: ${{ vars.APP_ID }}
        private-key: ${{ secrets.PRIVATE_KEY }}
        repositories: homebrew-tap
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TAP_GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

  publish-helm-chart:
    runs-on: ubuntu-latest
    needs: update-tag
    steps:
    - uses: actions/checkout@v4
      with:
        ref: v${{ needs.update-tag.outputs.new_version }}
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::803339316953:role/github-actions-ecr-push-llmariners
        aws-region: us-east-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registry-type: public
    - name: Set up Helm
      uses: Azure/setup-helm@v4
    - name: build and push helm chart
      run: |
        helm dependency build ./deployments/llmariner
        helm package --version ${{ needs.update-tag.outputs.new_version }} ./deployments/llmariner
        helm push llmariner-${{ needs.update-tag.outputs.new_version }}.tgz oci://public.ecr.aws/cloudnatix/llmariner-charts
